[33mcommit 194e4b7a62921016f19ee0ce7e4d5677ae8dd7c8[m[33m ([m[1;36mHEAD -> [m[1;32mandroid-10[m[33m)[m
Author: Quallenauge <Hamsi2k@freenet.de>
Date:   Thu Oct 1 23:32:01 2020 +0200

    techpack: Increase program name size, defined in WCD_CPE_STATE_MAX_LEN.
    
    Fixes: techpack/audio/asoc/codecs/wcd_cpe_core.c:1981:2: error: 'snprintf' size argument is too large; destination buffer has size 11, but size argument is 13 [-W
    Change-Id: Ib93218d97a9d61bb124be35b233d06399b199276
    Signed-off-by: TheSync <repo-sync@outlook.com>

[33mcommit 80b44ed98e726710497924dd8cec3bf25cad8e6d[m
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Sun May 19 10:11:12 2019 -0700

    techpack: audio: Fix buffer overflow in wsa881x_swrslave_reg_show
    
    Clang warns:
    
    ../techpack/audio/asoc/codecs/wsa881x.c:392:9: warning: 'snprintf' size
    argument is too large; destination buffer has size 20, but size argument
    is 25 [-Wfortify-source]
    
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: TheSync <repo-sync@outlook.com>

[33mcommit 516a1ac55459b4a6a88b1f2f7b3a143cf1ec433d[m
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Fri Sep 18 20:19:22 2020 +0300

    cpufreq: governor: Don't use 'timer' keyword
    
    The earlier implementation of governors used background timers and so
    functions, mutex, etc had 'timer' keyword in their names.
    
    But that's not true anymore. Replace 'timer' with 'update', as those
    functions, variables are based around updates to frequency.
    
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: TheSync <repo-sync@outlook.com>

[33mcommit cd9586c0bb5e5b89f2ba765fa400d93e3ef14f92[m
Author: Sudeep Holla <sudeep.holla@arm.com>
Date:   Thu Feb 14 18:29:10 2019 +0000

    PM / core: Add support to skip power management in device/driver model
    
    All device objects in the driver model contain fields that control the
    handling of various power management activities. However, it's not
    always useful. There are few instances where pseudo devices are added
    to the model just to take advantage of many other features like
    kobjects, udev events, and so on. One such example is cpu devices and
    their caches.
    
    The sysfs for the cpu caches are managed by adding devices with cpu
    as the parent in cpu_device_create() when secondary cpu is brought
    online. Generally when the secondary CPUs are hotplugged back in as part
    of resume from suspend-to-ram, we call cpu_device_create() from the cpu
    hotplug state machine while the cpu device associated with that CPU is
    not yet ready to be resumed as the device_resume() call happens bit
    later. It's not really needed to set the flag is_prepared for cpu
    devices as they are mostly pseudo device and hotplug framework deals
    with state machine and not managed through the cpu device.
    
    This often results in annoying warning when resuming:
    Enabling non-boot CPUs ...
    CPU1: Booted secondary processor
     cache: parent cpu1 should not be sleeping
    CPU1 is up
    CPU2: Booted secondary processor
     cache: parent cpu2 should not be sleeping
    CPU2 is up
    .... and so on.
    
    So in order to fix these kind of errors, we could just completely avoid
    doing any power management related initialisations and operations if
    they are not used by these devices.
    
    Add no_pm flags to indicate that the device doesn't require any sort of
    PM activities and all of them can be completely skipped. We can use the
    same flag to also avoid adding not used *power* sysfs entries for these
    devices. For now, lets use this for cpu cache devices.
    
    Reviewed-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Tested-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: TheSync <repo-sync@outlook.com>

[33mcommit 38d2efbec7befb610b89ed4b58851686f8ce4335[m
Author: Danny Lin <danny@kdrag0n.dev>
Date:   Wed Oct 28 12:01:35 2020 +0700

    Makefile: Remove obsolete -fno-builtin flag
    
    CAF cherry-picked an obsolete LLVMLinux patch from 2014 in commit
    96d47ae that introduced this
    unnecessary flag. Now that the functions used by Clang's libcall
    optimizations have been implemented, we can allow Clang to perform said
    optimizations for a minor performance bump in certain code paths.
    
    Signed-off-by: Danny Lin <danny@kdrag0n.dev
    Signed-off-by: TheSync <repo-sync@outlook.com>

[33mcommit 8bca8772481c1f24c95fd0f2a3ba750821630f52[m[33m ([m[1;31morigin/android-10[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: Nick Terrell <terrelln@fb.com>
Date:   Fri Aug 14 17:30:10 2020 -0700

    lz4: fix kernel decompression speed
    
    This patch replaces all memcpy() calls with LZ4_memcpy() which calls
    __builtin_memcpy() so the compiler can inline it.
    
    LZ4 relies heavily on memcpy() with a constant size being inlined.  In x86
    and i386 pre-boot environments memcpy() cannot be inlined because memcpy()
    doesn't get defined as __builtin_memcpy().
    
    An equivalent patch has been applied upstream so that the next import
    won't lose this change [1].
    
    I've measured the kernel decompression speed using QEMU before and after
    this patch for the x86_64 and i386 architectures.  The speed-up is about
    10x as shown below.
    
    Code    Arch    Kernel Size     Time    Speed
    v5.8    x86_64  11504832 B      148 ms   79 MB/s
    patch   x86_64  11503872 B       13 ms  885 MB/s
    v5.8    i386     9621216 B       91 ms  106 MB/s
    patch   i386     9620224 B       10 ms  962 MB/s
    
    I also measured the time to decompress the initramfs on x86_64, i386, and
    arm.  All three show the same decompression speed before and after, as
    expected.
    
    [1] https://github.com/lz4/lz4/pull/890
    
    Signed-off-by: Nick Terrell <terrelln@fb.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Yann Collet <yann.collet.73@gmail.com>
    Cc: Gao Xiang <gaoxiang25@huawei.com>
    Cc: Sven Schmidt <4sschmid@informatik.uni-hamburg.de>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Arvind Sankar <nivedita@alum.mit.edu>
    Link: http://lkml.kernel.org/r/20200803194022.2966806-1-nickrterrell@gmail.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: TheSync <repo-sync@outlook.com>

[33mcommit cbac092e3c0b2d56fa79cf4ffd4f87d5f966de5c[m
Author: Joe Perches <joe@perches.com>
Date:   Wed Jun 10 18:41:32 2020 -0700

    lib/lz4/lz4_decompress.c: document deliberate use of `&'
    
    This operation was intentional, but tools such as smatch will warn that it
    might not have been.
    
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Yann Collet <cyan@fb.com>
    Cc: Vasily Averin <vvs@virtuozzo.com>
    Cc: Gao Xiang <hsiangkao@aol.com>
    Link: http://lkml.kernel.org/r/3bf931c6ea0cae3e23f3485801986859851b4f04.camel@perches.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: TheSync <repo-sync@outlook.com>

[33mcommit 54c83bd6119789e6e5ec5f3043affdd757705cd9[m
Author: Park Ju Hyung <qkrwngud825@gmail.com>
Date:   Mon Sep 30 22:13:16 2019 +0900

    lz4: remove unused functions
    
    Signed-off-by: Park Ju Hyung <qkrwngud825@gmail.com>
    Signed-off-by: TheSync <repo-sync@outlook.com>

[33mcommit f2bf5cbf68bd5504ec910ecac09808857ae1f286[m
Author: Tom Levy <tomlevy93@gmail.com>
Date:   Tue Jul 16 16:30:24 2019 -0700

    include/linux/lz4.h: fix spelling and copy-paste errors in documentation
    
    Fix a few spelling and grammar errors, and two places where fast/safe in
    the documentation did not match the function.
    
    Link: http://lkml.kernel.org/r/20190321014452.13297-1-tomlevy93@gmail.com
    Signed-off-by: Tom Levy <tomlevy93@gmail.com>
    Reviewed-by: Andrew Morton <akpm@linux-foun